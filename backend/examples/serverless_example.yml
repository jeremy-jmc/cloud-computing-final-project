org: jeremymatos
service: api-s3

provider:
  name: aws
  runtime: python3.12	
  # Default memory size for functions (default: 256MB)
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::982830027345:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_comentarios
  
functions:
  crear:
    handler: seguridad_CrearUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/crear
          method: post
          cors: true
          integration: lambda
  login:
    handler: seguridad_LoginUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/login
          method: post
          cors: true
          integration: lambda

resources:
  Resources:
    TablaComentarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: uuid
            KeyType: RANGE
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST


# BASE DE DATOS: https://www.kaggle.com/datasets/maharshipandya/-spotify-tracks-dataset/code
#   Usar minimo 1 GSI, LSI
#   Implementar la funcionalidad "Copia de seguridad - Recuperacion en un momento dado (PITR)"
#   DATOS DE PRUEBA: Minimo 10K registros x tabla repartidos entre 3 tenant_id distintos

# LAMBDA & DYNAMODB CREATION: https://github.com/jeremy-jmc/api-pelicula/blob/main/serverless.yml

# DOCUMENTACION: 
#   https://github.com/fastapi/fastapi/issues/2712
#   https://stackoverflow.com/questions/64377405/how-to-generate-swagger-documentation-for-aws-lambda-python-api

# SEGURIDAD: https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/functions/LoginUsuario?tab=code
#    Implementar un API de usuarios con token de acceso
#    Todas las API deben ser protegidas con token de acceso
