org: jeremymatos
service: api-s3

provider:
  name: aws
  runtime: python3.12	
  # Default memory size for functions (default: 256MB)
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::982830027345:role/LabRole
  environment:
    USERS_TABLE: ${sls:stage}-t_users
    ARTIST_TABLE: ${sls:stage}-t_artists

resources:
  Resources:
  # Users Table
    TablaUsuarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: user_name
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
          - AttributeName: user_name
            KeyType: RANGE
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST
  # Artist Table -> https://stackoverflow.com/questions/57322645/how-to-define-dynamodb-table-with-global-secondary-index-in-serverless-framework
    TablaArtistas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self.provider.environment.ARTIST_TABLE}
        AttributeDefinitions:
          - AttributeName: artist_name
            AttributeType: S
          - AttributeName: popularity
            AttributeType: N
          - AttributeName: genres
            AttributeType: S
        KeySchema:
          - AttributeName: artist_name
            KeyType: HASH
          - AttributeName: popularity
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: genres
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        


# BASE DE DATOS: https://www.kaggle.com/datasets/maharshipandya/-spotify-tracks-dataset/code
#   Usar minimo 1 GSI, LSI
#   Implementar la funcionalidad "Copia de seguridad - Recuperacion en un momento dado (PITR)"
#   DATOS DE PRUEBA: Minimo 10K registros x tabla repartidos entre 3 tenant_id distintos

# LAMBDA & DYNAMODB CREATION: https://github.com/jeremy-jmc/api-pelicula/blob/main/serverless.yml

# DOCUMENTACION: 
#   https://github.com/fastapi/fastapi/issues/2712
#   https://stackoverflow.com/questions/64377405/how-to-generate-swagger-documentation-for-aws-lambda-python-api

# SEGURIDAD: https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/functions/LoginUsuario?tab=code
#    Implementar un API de usuarios con token de acceso
#    Todas las API deben ser protegidas con token de acceso
